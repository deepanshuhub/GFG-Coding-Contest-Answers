Given N and a square matrix adj[ ][ ] of size N*N, you have to find whether it is possible to construct a undirected weighted graph of N nodes numbered from 0 to N-1 such that minimum distance between ith and jth node is given by adj[i][j].
Note:

adj[i][i] = 0 for every i.
adj[i][j] = adj[j][i]
Example 1: 

Input:
N = 2
adj[] = {{0, 8},
         {8, 0}}
Output:
Yes
Explanation: 
Constructed graph:
              0 
              |(8)
              1 
Example 2: 

Input:
N = 3
par[] = {{0, 1, 3},
         {1, 0, 1},
         {3, 1, 0}}
Output:
No
Explanation: 
Graph cannot be constructed because
shortest distance from node 0 to node 1 
is 1 and shortest distance from node 1
to node 2 is 1 which means that possible 
distance from node 0 to node 2 via node 1
can be 2 but given shortest distance from 
node 0 to node 2 is 3.
Your Task:
You don't need to read input or print anything. Your task is to complete the function graph( ) which takes number of nodes N and 2D array adj[ ][ ] as input parameters and returns true if graph can be constructed satisfying all conditions, else returns false.

Constraints:
1 ≤ N ≤ 200
0 ≤ adj[i][j] ≤ 106

