Problem:

There are N coins kept in a line. Each coin has two sides - one is colored gold and the other silver. You can flip two adjacent coins any number of times. You need to make the gold-colored side of every coin facing up. You are given the initial status of coins in a binary string s where '1' represents the gold side facing up and '0' represents the silver side facing up. If it is possible to make the gold-colored side of every coin facing up, return "Yes", otherwise return "No".

Example 1: 

Input:
N = 8, s = "11001100"
Output:
Yes
Explanation: 
Flipping 3rd and 4th coin together and 7th 
and 8th coin together will do the task.
Example 2: 

Input:
N = 8, s = "10010100"
Output:
No
Explanation: 
It is not possible to make the gold 
colored side of every coin facing up.
Your Task:
You don't need to read input or print anything. Your task is to complete the function flipCoins( ) which takes integer N and string s as input parameters and returns "Yes" or "No".

Constraints:
1 ≤ N ≤ 106

Answer:

class Solution:
    def flipCoins(self, N, s):
        # Count the number of '0's in the string
        zero_count = s.count('0')
        
        # If the count of '0's is odd, it's not possible to flip all coins
        if zero_count % 2 == 1:
            return "No"
        else:
            return "Yes"